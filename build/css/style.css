@charset "UTF-8";
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
@import url(http://fonts.googleapis.com/css?family=PT+Sans:400,700,400italic);
@import url(http://fonts.googleapis.com/css?family=PT+Serif:400,700);
@import url(https://fonts.googleapis.com/css?family=Open+Sans:300,400);
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

.vmiddle {
  vertical-align: middle; }

section {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center; }

.main {
  padding-top: 4rem; }

body {
  background-color: #eff5f7;
  font-family: "PT Sans", sans-serif; }

h1 {
  display: block;
  font-family: "PT Serif", serif;
  font-size: 1.5rem;
  font-weight: 400;
  margin-bottom: 1rem;
  text-align: center;
  width: 100%; }

h2 {
  font-weight: 400; }

p {
  color: gray;
  line-height: 1.75rem;
  margin-bottom: 20px;
  text-align: center; }

ul {
  list-style-type: none; }

.large-icon {
  display: block;
  margin: auto;
  margin-bottom: 2rem; }

.ch {
  font-family: Georgia, "Times New Roman", "FangSong", "仿宋", STFangSong, "华文仿宋", serif; }

.l-constrained {
  margin: auto;
  padding: 1.5rem 16rem; }

.l-section {
  border-bottom: 3px solid #bdd9db;
  display: block;
  margin-top: 1rem;
  padding-bottom: 2rem; }

.l-split {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
  margin: auto;
  width: 100%; }
  .l-split img {
    display: block;
    margin-bottom: 2rem;
    margin-left: auto;
    margin-right: auto; }
  .l-split li {
    margin: 0 0em 3em 0;
    max-width: 33%; }

.section {
  padding-top: 2.5rem; }

.wrap {
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap; }

img.center {
  display: block;
  margin-left: auto;
  margin-right: auto; }

.banner {
  background-image: url("../images/csf-asset-banner-home.jpeg");
  background-size: 100% 100%;
  color: #f1f1f1;
  height: 500px;
  width: 100%; }
  .banner img {
    display: block;
    margin-left: auto;
    margin-right: auto;
    padding-bottom: .5rem;
    padding-top: 5rem; }
  .banner__head {
    color: #f1f1f1;
    -webkit-box-flex: 1;
    -webkit-flex: 1 0 100%;
        -ms-flex: 1 0 100%;
            flex: 1 0 100%;
    font: 300 1.5rem "Open Sans", sans-serif;
    text-align: center; }
  .banner__date {
    color: #f1f1f1;
    -webkit-box-flex: 1;
    -webkit-flex: 1 0 100%;
        -ms-flex: 1 0 100%;
            flex: 1 0 100%;
    font-size: 1.5rem;
    padding-top: 6rem;
    text-align: center; }

.media {
  background-color: #fff;
  border-radius: 4px;
  color: #818181;
  margin-bottom: 2rem;
  margin-right: 2rem;
  padding-bottom: .5rem;
  width: 100%; }
  .media__title {
    font-size: 1.2rem;
    font-weight: 700;
    padding-top: 2rem;
    text-align: center; }
  .media__button {
    background-color: #fff;
    border: 3px solid #050097;
    border-radius: 5px;
    color: #050097;
    margin: auto;
    margin-bottom: 2rem;
    margin-top: 3rem;
    padding: .4rem 2rem;
    text-align: center;
    width: 15%; }
  .media img {
    margin-bottom: 0;
    margin-top: 1em; }
  .media iframe {
    margin-bottom: 0;
    width: 100%; }
  .media p {
    padding-left: 1rem;
    padding-right: 1rem; }

.media:nth-child(2) {
  margin-right: 0; }

.topborder {
  border-top: 5px solid #050097; }

.l-split > a {
  background-color: #fff;
  margin-bottom: 2rem;
  margin-right: 2rem;
  padding-bottom: .5rem;
  text-decoration: none;
  width: 100%; }
  .l-split > a .boothimage {
    background-image: url("/images/csf-asset-booth.png");
    background-size: 100%;
    height: 87px;
    margin: auto;
    margin-top: 40px;
    width: 90px; }
  .l-split > a .tableimage {
    background-image: url("/images/csf-asset-table.png");
    background-size: 100%;
    height: 43px;
    margin: auto;
    margin-top: 84px;
    width: 90px; }
  .l-split > a p {
    margin-left: 1.5rem;
    margin-right: 1.5rem;
    min-width: 215px; }
  .l-split > a > a:nth-child(2) {
    margin-right: 0; }

.l-split a:hover .topborder {
  border-top: 5px solid rgba(5, 0, 151, 0.3); }

.l-split a:hover .boothimage {
  background-image: url("/images/csf-asset-booth__hover.png"); }

.l-split a:hover .tableimage {
  background-image: url("/images/csf-asset-table__hover.png"); }

.l-split a:hover .media__button {
  border: 3px solid rgba(5, 0, 151, 0.3);
  color: rgba(5, 0, 151, 0.3); }

.language {
  background-color: #e8e8e8;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center; }
  .language a {
    margin: 1rem 0;
    text-decoration: none; }

.tables {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 95%; }
  .tables table {
    width: 33%; }

header {
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  background-color: #f1f1f1;
  box-shadow: 0 1px 2px 0 rgba(200, 200, 200, 0.4);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
  width: 100%; }
  header ul {
    -webkit-box-align: center;
    -webkit-align-items: center;
        -ms-flex-align: center;
            align-items: center;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
        -ms-flex-pack: justify;
            justify-content: space-between;
    list-style-type: none;
    padding-right: 10em;
    width: 100%; }
    header ul li.logo {
      -webkit-box-flex: 0;
      -webkit-flex: 0 1 80%;
          -ms-flex: 0 1 80%;
              flex: 0 1 80%; }
    header ul a {
      color: #818181;
      font-size: .8em;
      padding: 5px 20px;
      text-decoration: none;
      white-space: nowrap; }
    header ul a:hover {
      color: #cccdce; }
  header a.register {
    background-color: #c89f20;
    color: #f1f1f1;
    border-radius: 3px;
    margin-left: 2em; }
  header li.active > a {
    color: #0e44af; }

footer {
  background: -webkit-linear-gradient(0deg, #0d36a4, #19c8f8);
  background: linear-gradient(90deg, #0d36a4, #19c8f8);
  padding: 1rem 0; }
  footer p {
    color: #b4b4b4;
    font-family: "PT Serif", serif; }
  footer .logo {
    border: 4px solid #b4b4b4;
    color: #b4b4b4;
    display: block;
    font-size: 1.5em;
    margin: auto;
    padding: 0 1px 0 3px;
    width: 5.8rem; }

footer > .logo.chbox {
  width: 12rem; }

#home.section {
  padding-top: 0; }

#schedule .l-section {
  display: block;
  padding: 1.5rem 0; }

#schedule table {
  border-collapse: separate;
  border-spacing: 0 5px;
  margin: auto; }

#schedule tr {
  margin-bottom: 5px; }

#schedule td {
  padding: .5rem 1rem; }

#schedule .data {
  background-color: #f1f1f1; }

#schedule .time {
  color: #515e65;
  font-weight: 700;
  vertical-align: top; }

#schedule .event {
  color: #040097; }

#schedule .area {
  color: #4b575e;
  font-style: italic;
  font-weight: 400; }

#schedule .speaker {
  color: #314049; }

#home ul {
  padding-left: 0rem; }

.img-circle {
  border-radius: 50%; }

.speaker li {
  padding-left: 5px; }

.speaker p {
  min-width: 300px; }

h2.center {
  display: block;
  text-align: center; }

/*# sourceMappingURL=data:application/json;base64, */